{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cassiedurr/Documents/projects/react-weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import Titles from\"./components/Titles\";import Form from\"./components/Form\";// import Weather from \"./components/Weather\";\nimport Forecast from\"./components/Forecast\";import*as reactRouter from\"react-router\";var API_KEY=\"0d1548ee736784b23abbe6a2cce6a6a6\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={temperature:undefined,city:undefined,country:undefined,humidity:undefined,description:undefined,forecast_date:undefined,error:undefined};_this.getWeather=function _callee(e){var cityID,data;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cityID=\"6173331,1850144,2643743,5809844\";_context.next=3;return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/group?id=\".concat(cityID,\"&appid=\").concat(API_KEY,\"&units=imperial\")).then(function(api_call_onload){return api_call_onload.json();}));case 3:data=_context.sent;console.log(data);if(cityID){_this.setState({isLoaded:true,temperature:data.main.temp,city:data.name,description:data.weather[0].description,error:\"\"});}else{_this.setState({isLoaded:true,temperature:undefined,city:undefined,description:undefined,error:\"Please enter a city\"});}case 6:case\"end\":return _context.stop();}}});};_this.getForecast=function _callee2(e){var forecast_city,forecast_call,forecast_data;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();forecast_city=e.target.elements.city.value;_context2.next=4;return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat(forecast_city,\"&appid=\").concat(API_KEY,\"&units=imperial&cnt=40\")));case 4:forecast_call=_context2.sent;_context2.next=7;return _regeneratorRuntime.awrap(forecast_call.json());case 7:forecast_data=_context2.sent;if(forecast_city){_this.setState({forecast_city:forecast_data.city.name,forecast:Math.round(forecast_data.list[7].main.temp),forecast1:Math.round(forecast_data.list[15].main.temp),forecast2:Math.round(forecast_data.list[23].main.temp),forecast3:Math.round(forecast_data.list[31].main.temp),forecast4:Math.round(forecast_data.list[39].main.temp),forecast_date:forecast_data.list[7].dt_txt,forecast_date1:forecast_data.list[15].dt_txt,forecast_date2:forecast_data.list[23].dt_txt,forecast_date3:forecast_data.list[31].dt_txt,forecast_date4:forecast_data.list[39].dt_txt,error:\"\"});console.log(_this.forecast);}else{_this.setState({forecast:undefined,forecast_city:undefined,forecast_date:undefined,error:\"Please enter a city\"});}case 9:case\"end\":return _context2.stop();}}});};return _this;}_createClass(App,[{key:\"render\",value:function render(){return React.createElement(reactRouter.Router,{basename:'/react-weather-app'},React.createElement(reactRouter.Route,{path:\"/\"}),React.createElement(\"div\",{className:\"wrapper\"},React.createElement(Titles,null),React.createElement(Form,{getForecast:this.getForecast}),React.createElement(Forecast,{forecast_city:this.state.forecast_city,forecast:this.state.forecast,forecast1:this.state.forecast1,forecast2:this.state.forecast2,forecast3:this.state.forecast3,forecast4:this.state.forecast4,forecast_date:this.state.forecast_date,forecast_date1:this.state.forecast_date1,forecast_date2:this.state.forecast_date2,forecast_date3:this.state.forecast_date3,forecast_date4:this.state.forecast_date4,error:this.state.error})));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/cassiedurr/Documents/projects/react-weather-app/src/App.js"],"names":["React","Titles","Form","Forecast","reactRouter","API_KEY","App","state","temperature","undefined","city","country","humidity","description","forecast_date","error","getWeather","e","cityID","fetch","then","api_call_onload","json","data","console","log","setState","isLoaded","main","temp","name","weather","getForecast","preventDefault","forecast_city","target","elements","value","forecast_call","forecast_data","forecast","Math","round","list","forecast1","forecast2","forecast3","forecast4","dt_txt","forecast_date1","forecast_date2","forecast_date3","forecast_date4","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\n// import Weather from \"./components/Weather\";\nimport Forecast from \"./components/Forecast\";\nimport * as reactRouter from \"react-router\";\n\n\nconst API_KEY = \"0d1548ee736784b23abbe6a2cce6a6a6\";\n\n\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    forecast_date: undefined,\n    error: undefined\n  }\n\n\n  getWeather = async (e) => {\n    const cityID = \"6173331,1850144,2643743,5809844\";\n    const data = await fetch(`http://api.openweathermap.org/data/2.5/group?id=${cityID}&appid=${API_KEY}&units=imperial`)\n    .then(api_call_onload => api_call_onload.json());\n    console.log(data);\n      if(cityID) {\n        this.setState({\n          isLoaded: true,\n          temperature: data.main.temp,\n          city: data.name,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n            isLoaded: true,\n            temperature: undefined,\n            city: undefined,\n            description: undefined,\n            error: \"Please enter a city\"\n        });\n      }\n  }\n\n  getForecast = async (e) => {\n    e.preventDefault();\n    const forecast_city = e.target.elements.city.value;\n    const forecast_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${forecast_city}&appid=${API_KEY}&units=imperial&cnt=40`);\n    const forecast_data = await forecast_call.json();\n    if(forecast_city) {\n      this.setState({\n        forecast_city: forecast_data.city.name,\n\n        forecast: Math.round(forecast_data.list[7].main.temp),\n        forecast1: Math.round(forecast_data.list[15].main.temp),\n        forecast2: Math.round(forecast_data.list[23].main.temp),\n        forecast3: Math.round(forecast_data.list[31].main.temp),\n        forecast4: Math.round(forecast_data.list[39].main.temp),\n        \n        \n        forecast_date: forecast_data.list[7].dt_txt,\n        forecast_date1: forecast_data.list[15].dt_txt,\n        forecast_date2: forecast_data.list[23].dt_txt,\n        forecast_date3: forecast_data.list[31].dt_txt,\n        forecast_date4: forecast_data.list[39].dt_txt,\n        error: \"\"\n      })\n      console.log(this.forecast);\n    } else {\n      this.setState({\n        forecast: undefined,\n        forecast_city: undefined,\n        forecast_date: undefined,\n        error: \"Please enter a city\"\n    })\n  }\n}\n  \n  \n  render() { \n    return (\n      <reactRouter.Router basename={'/react-weather-app'}>\n        <reactRouter.Route path='/' />\n        <div className=\"wrapper\"> \n          <Titles />\n          \n          {/* <Form getWeather={this.getWeather}/> */}\n\n          <Form getForecast={this.getForecast}/>   \n\n          {/* <Weather\n            temperature={this.state.temperature}\n            humitidy={this.state.humidity}\n            city={this.state.city}\n            country={this.state.country}\n            description={this.state.description}\n            error={this.state.error}\n          /> */}\n          \n          <Forecast \n\n            forecast_city={this.state.forecast_city}\n            \n            forecast={this.state.forecast}\n            forecast1={this.state.forecast1}\n            forecast2={this.state.forecast2}\n            forecast3={this.state.forecast3}\n            forecast4={this.state.forecast4}\n\n            \n            forecast_date={this.state.forecast_date}\n            forecast_date1={this.state.forecast_date1}\n            forecast_date2={this.state.forecast_date2}\n            forecast_date3={this.state.forecast_date3}\n            forecast_date4={this.state.forecast_date4}\n\n            error={this.state.error}\n          />\n        </div>\n    </reactRouter.Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}