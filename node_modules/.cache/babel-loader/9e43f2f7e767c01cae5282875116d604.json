{"ast":null,"code":"var _jsxFileName = \"/Users/cassiedurr/Documents/projects/react-weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\"; // import Weather from \"./components/Weather\";\n\nimport Forecast from \"./components/Forecast\";\nconst API_KEY = \"0d1548ee736784b23abbe6a2cce6a6a6\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      forecast_date: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      const cityID = \"6173331,1850144,2643743,5809844\";\n      const data = await fetch(`http://api.openweathermap.org/data/2.5/group?id=${cityID}&appid=${API_KEY}&units=imperial`).then(api_call_onload => api_call_onload.json());\n      console.log(data);\n\n      if (cityID) {\n        this.setState({\n          isLoaded: true,\n          temperature: data.main.temp,\n          city: data.name,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          temperature: undefined,\n          city: undefined,\n          description: undefined,\n          error: \"Please enter a city\"\n        });\n      }\n    };\n\n    this.getForecast = async e => {\n      e.preventDefault();\n      const forecast_city = e.target.elements.city.value;\n      const forecast_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${forecast_city}&appid=${API_KEY}&units=imperial&cnt=40`);\n      const forecast_data = await forecast_call.json();\n\n      if (forecast_city) {\n        this.setState({\n          forecast_city: forecast_data.city.name,\n          forecast: Math.round(forecast_data.list[7].main.temp),\n          forecast1: Math.round(forecast_data.list[15].main.temp),\n          forecast2: Math.round(forecast_data.list[23].main.temp),\n          forecast3: Math.round(forecast_data.list[31].main.temp),\n          forecast4: Math.round(forecast_data.list[39].main.temp),\n          forecast_date: forecast_data.list[7].dt_txt,\n          forecast_date1: forecast_data.list[15].dt_txt,\n          forecast_date2: forecast_data.list[23].dt_txt,\n          forecast_date3: forecast_data.list[31].dt_txt,\n          forecast_date4: forecast_data.list[39].dt_txt,\n          error: \"\"\n        });\n        console.log(this.forecast);\n      } else {\n        this.setState({\n          forecast: undefined,\n          forecast_city: undefined,\n          forecast_date: undefined,\n          error: \"Please enter a city\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      basename: '/react-weather-app',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getForecast: this.getForecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Forecast, {\n      forecast_city: this.state.forecast_city,\n      forecast: this.state.forecast,\n      forecast1: this.state.forecast1,\n      forecast2: this.state.forecast2,\n      forecast3: this.state.forecast3,\n      forecast4: this.state.forecast4,\n      forecast_date: this.state.forecast_date,\n      forecast_date1: this.state.forecast_date1,\n      forecast_date2: this.state.forecast_date2,\n      forecast_date3: this.state.forecast_date3,\n      forecast_date4: this.state.forecast_date4,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cassiedurr/Documents/projects/react-weather-app/src/App.js"],"names":["React","Titles","Form","Forecast","API_KEY","App","Component","state","temperature","undefined","city","country","humidity","description","forecast_date","error","getWeather","e","cityID","data","fetch","then","api_call_onload","json","console","log","setState","isLoaded","main","temp","name","weather","getForecast","preventDefault","forecast_city","target","elements","value","forecast_call","forecast_data","forecast","Math","round","list","forecast1","forecast2","forecast3","forecast4","dt_txt","forecast_date1","forecast_date2","forecast_date3","forecast_date4","render","Home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAIA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,aAAa,EAAEL,SANT;AAONM,MAAAA,KAAK,EAAEN;AAPD,KADwB;;AAAA,SAYhCO,UAZgC,GAYnB,MAAOC,CAAP,IAAa;AACxB,YAAMC,MAAM,GAAG,iCAAf;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,mDAAkDF,MAAO,UAASd,OAAQ,iBAA5E,CAAL,CAClBiB,IADkB,CACbC,eAAe,IAAIA,eAAe,CAACC,IAAhB,EADN,CAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACE,UAAGD,MAAH,EAAW;AACT,aAAKQ,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZnB,UAAAA,WAAW,EAAEW,IAAI,CAACS,IAAL,CAAUC,IAFX;AAGZnB,UAAAA,IAAI,EAAES,IAAI,CAACW,IAHC;AAIZjB,UAAAA,WAAW,EAAEM,IAAI,CAACY,OAAL,CAAa,CAAb,EAAgBlB,WAJjB;AAKZE,UAAAA,KAAK,EAAE;AALK,SAAd;AAOD,OARD,MAQO;AACL,aAAKW,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVnB,UAAAA,WAAW,EAAEC,SAFH;AAGVC,UAAAA,IAAI,EAAED,SAHI;AAIVI,UAAAA,WAAW,EAAEJ,SAJH;AAKVM,UAAAA,KAAK,EAAE;AALG,SAAd;AAOD;AACJ,KAlC+B;;AAAA,SAoChCiB,WApCgC,GAoClB,MAAOf,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACgB,cAAF;AACA,YAAMC,aAAa,GAAGjB,CAAC,CAACkB,MAAF,CAASC,QAAT,CAAkB1B,IAAlB,CAAuB2B,KAA7C;AACA,YAAMC,aAAa,GAAG,MAAMlB,KAAK,CAAE,qDAAoDc,aAAc,UAAS9B,OAAQ,wBAArF,CAAjC;AACA,YAAMmC,aAAa,GAAG,MAAMD,aAAa,CAACf,IAAd,EAA5B;;AACA,UAAGW,aAAH,EAAkB;AAChB,aAAKR,QAAL,CAAc;AACZQ,UAAAA,aAAa,EAAEK,aAAa,CAAC7B,IAAd,CAAmBoB,IADtB;AAGZU,UAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,IAAd,CAAmB,CAAnB,EAAsBf,IAAtB,CAA2BC,IAAtC,CAHE;AAIZe,UAAAA,SAAS,EAAEH,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBf,IAAvB,CAA4BC,IAAvC,CAJC;AAKZgB,UAAAA,SAAS,EAAEJ,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBf,IAAvB,CAA4BC,IAAvC,CALC;AAMZiB,UAAAA,SAAS,EAAEL,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBf,IAAvB,CAA4BC,IAAvC,CANC;AAOZkB,UAAAA,SAAS,EAAEN,IAAI,CAACC,KAAL,CAAWH,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBf,IAAvB,CAA4BC,IAAvC,CAPC;AAUZf,UAAAA,aAAa,EAAEyB,aAAa,CAACI,IAAd,CAAmB,CAAnB,EAAsBK,MAVzB;AAWZC,UAAAA,cAAc,EAAEV,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBK,MAX3B;AAYZE,UAAAA,cAAc,EAAEX,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBK,MAZ3B;AAaZG,UAAAA,cAAc,EAAEZ,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBK,MAb3B;AAcZI,UAAAA,cAAc,EAAEb,aAAa,CAACI,IAAd,CAAmB,EAAnB,EAAuBK,MAd3B;AAeZjC,UAAAA,KAAK,EAAE;AAfK,SAAd;AAiBAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKe,QAAjB;AACD,OAnBD,MAmBO;AACL,aAAKd,QAAL,CAAc;AACZc,UAAAA,QAAQ,EAAE/B,SADE;AAEZyB,UAAAA,aAAa,EAAEzB,SAFH;AAGZK,UAAAA,aAAa,EAAEL,SAHH;AAIZM,UAAAA,KAAK,EAAE;AAJK,SAAd;AAMH;AACF,KApEiC;AAAA;;AAuEhCsC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKtB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAgBE,oBAAC,QAAD;AAEE,MAAA,aAAa,EAAE,KAAKzB,KAAL,CAAW2B,aAF5B;AAIE,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAWiC,QAJvB;AAKE,MAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWqC,SALxB;AAME,MAAA,SAAS,EAAE,KAAKrC,KAAL,CAAWsC,SANxB;AAOE,MAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWuC,SAPxB;AAQE,MAAA,SAAS,EAAE,KAAKvC,KAAL,CAAWwC,SARxB;AAWE,MAAA,aAAa,EAAE,KAAKxC,KAAL,CAAWO,aAX5B;AAYE,MAAA,cAAc,EAAE,KAAKP,KAAL,CAAW0C,cAZ7B;AAaE,MAAA,cAAc,EAAE,KAAK1C,KAAL,CAAW2C,cAb7B;AAcE,MAAA,cAAc,EAAE,KAAK3C,KAAL,CAAW4C,cAd7B;AAeE,MAAA,cAAc,EAAE,KAAK5C,KAAL,CAAW6C,cAf7B;AAiBE,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWQ,KAjBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAFF,CADF;AAyCD;;AAjH+B;;AAoHlC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\n// import Weather from \"./components/Weather\";\nimport Forecast from \"./components/Forecast\"\n\n\nconst API_KEY = \"0d1548ee736784b23abbe6a2cce6a6a6\";\n\n\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    forecast_date: undefined,\n    error: undefined\n  }\n\n\n  getWeather = async (e) => {\n    const cityID = \"6173331,1850144,2643743,5809844\";\n    const data = await fetch(`http://api.openweathermap.org/data/2.5/group?id=${cityID}&appid=${API_KEY}&units=imperial`)\n    .then(api_call_onload => api_call_onload.json());\n    console.log(data);\n      if(cityID) {\n        this.setState({\n          isLoaded: true,\n          temperature: data.main.temp,\n          city: data.name,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n            isLoaded: true,\n            temperature: undefined,\n            city: undefined,\n            description: undefined,\n            error: \"Please enter a city\"\n        });\n      }\n  }\n\n  getForecast = async (e) => {\n    e.preventDefault();\n    const forecast_city = e.target.elements.city.value;\n    const forecast_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${forecast_city}&appid=${API_KEY}&units=imperial&cnt=40`);\n    const forecast_data = await forecast_call.json();\n    if(forecast_city) {\n      this.setState({\n        forecast_city: forecast_data.city.name,\n\n        forecast: Math.round(forecast_data.list[7].main.temp),\n        forecast1: Math.round(forecast_data.list[15].main.temp),\n        forecast2: Math.round(forecast_data.list[23].main.temp),\n        forecast3: Math.round(forecast_data.list[31].main.temp),\n        forecast4: Math.round(forecast_data.list[39].main.temp),\n        \n        \n        forecast_date: forecast_data.list[7].dt_txt,\n        forecast_date1: forecast_data.list[15].dt_txt,\n        forecast_date2: forecast_data.list[23].dt_txt,\n        forecast_date3: forecast_data.list[31].dt_txt,\n        forecast_date4: forecast_data.list[39].dt_txt,\n        error: \"\"\n      })\n      console.log(this.forecast);\n    } else {\n      this.setState({\n        forecast: undefined,\n        forecast_city: undefined,\n        forecast_date: undefined,\n        error: \"Please enter a city\"\n    })\n  }\n}\n  \n  \n  render() { \n    return (\n      <Router basename={'/react-weather-app'}>\n        <Route path='/' component={Home} />\n        <div className=\"wrapper\"> \n          <Titles />\n          \n          {/* <Form getWeather={this.getWeather}/> */}\n\n          <Form getForecast={this.getForecast}/>   \n\n          {/* <Weather\n            temperature={this.state.temperature}\n            humitidy={this.state.humidity}\n            city={this.state.city}\n            country={this.state.country}\n            description={this.state.description}\n            error={this.state.error}\n          /> */}\n          \n          <Forecast \n\n            forecast_city={this.state.forecast_city}\n            \n            forecast={this.state.forecast}\n            forecast1={this.state.forecast1}\n            forecast2={this.state.forecast2}\n            forecast3={this.state.forecast3}\n            forecast4={this.state.forecast4}\n\n            \n            forecast_date={this.state.forecast_date}\n            forecast_date1={this.state.forecast_date1}\n            forecast_date2={this.state.forecast_date2}\n            forecast_date3={this.state.forecast_date3}\n            forecast_date4={this.state.forecast_date4}\n\n            error={this.state.error}\n          />\n        </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}